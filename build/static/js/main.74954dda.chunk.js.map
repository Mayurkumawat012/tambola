{"version":3,"sources":["Housie.js","serviceWorker.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","key","value","speech","Speech","init","volume","lang","rate","pitch","listeners","then","data","catch","e","console","error","Housie","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createTable","table","k","i","children","j","push","renderSquare","Cookies","get","set","Array","fill","map","item","index","state","numbers","JSON","parse","active_numbers","current_number","time","start_button_text","handleClick","popValue","bind","assertThisInitialized","startButtonClick","startTimer","stopButtonClick","stopTimer","_this2","pop_value","splice","Math","floor","random","length","setState","prevProps","prevState","callSpeech","speak","text","queue","onstart","onend","onresume","onboundary","event","_this3","log","timer","setInterval","tickTimer","resetTimer","timer2","setTimeout","remove","clearInterval","clearTimeout","window","location","reload","restartGame","alt","src","id","React","Component","Boolean","hostname","match","ReactDOM","render","src_Housie","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74954dda.chunk.js","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport Speech from 'speak-tts';\nimport './App.css';\n//import { instanceOf } from 'prop-types';\nimport Cookies from 'js-cookie';\n\nfunction Square(props) {\n\treturn (\n\t\t<span className={props.className} onClick={props.onClick} key={props.value} >\n\t\t\t{props.value}\n\t\t</span>\n\t);\n}\n// const _addVoicesList = voices => {\n// \tconst list = window.document.createElement(\"div\");\n// \tlet html =\n// \t\t'<h2>Available Voices</h2><select id=\"languages\"><option value=\"\">autodetect language</option>';\n// \tvoices.forEach(voice => {\n// \t\thtml += `<option value=\"${voice.lang}\" data-name=\"${voice.name}\">${\n// \t\t\tvoice.name\n// \t\t\t} (${voice.lang})</option>`;\n// \t});\n// \tlist.innerHTML = html;\n// \twindow.document.body.appendChild(list);\n// };\nconst speech = new Speech();\n\nspeech\n\t.init({\n\t\tvolume: 1,\n\t\tlang: \"hi-IN\",\n\t\trate: .8,\n\t\tpitch: 1,\n\t\t//'voice':'Google UK English Male',\n\t\t//'splitSentences': false,\n\t\tlisteners: {\n\t\t\t// onvoiceschanged: voices => {\n\t\t\t// \tconsole.log(\"Voices changed\", voices);\n\t\t\t// }\n\t\t}\n\t})\n\t.then(data => {\n\t\t//console.log(\"Speech is ready\", data);\n\t\t//_addVoicesList(data.voices);\n\n\t})\n\t.catch(e => {\n\t\tconsole.error(\"An error occured while initializing : \", e);\n\t});\nclass Housie extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tconst N = 90;\n\t\t// const expires = new Date()\t\t\n\t\t// expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * 14)\n\n\t\tif (typeof Cookies.get('numbers') == 'undefined' || Cookies.get('numbers') === '') {\n\t\t\tCookies.set('numbers', Array(N).fill().map((item, index) => 1 + index));\n\t\t}\n\n\t\tif (typeof Cookies.get('active_numbers') == 'undefined' || Cookies.get('active_numbers') === '') {\n\t\t\tCookies.set('active_numbers', Array(N).fill().map((item, index) => 1));\n\t\t}\n\t\t\t\t\n\t\tthis.state = {\n\t\t\tnumbers: JSON.parse(Cookies.get('numbers')),\n\t\t\tactive_numbers: JSON.parse(Cookies.get('active_numbers')),\n\t\t\tcurrent_number: '',\n\t\t\ttime: 0,\n\t\t\tstart_button_text:'Start'\t\t\t\n\t\t};\n\t\tthis.handleClick = this.popValue.bind(this);\n\t\tthis.startButtonClick = this.startTimer.bind(this);\n\t\tthis.stopButtonClick = this.stopTimer.bind(this);\n\t\t\n\t}\n\n\trenderSquare(i) {\n\t\t//console.log(i);\n\t\t\n\t\t\n\t\treturn (\t\t\t\t\n\t\t\t<Square className={this.state.active_numbers[i] === 0 ? 'square dark' : 'square'} value={i} key={'square_'+i} />\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t);\n\t}\n\n\tcreateTable = () => {\n\t\tlet table = []\n\t\tlet k = 1;\n\n\t\t// Outer loop to create parent\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tlet children = []\n\t\t\t//Inner loop to create children\n\t\t\tfor (let j = 0; j < 10; j++) {\n\t\t\t\tchildren.push(this.renderSquare(k))\n\t\t\t\tk++\n\t\t\t}\n\t\t\t//Create the parent and add the children\n\t\t\ttable.push(<div key={'row_' + (i+1)} className=\"board-row\">{children}</div>)\n\n\t\t}\n\t\t\n\t\treturn table\n\t}\n\n\t\n\tpopValue() {\t\t\n\t\tvar arr_pop = this.state.numbers.splice(Math.floor(Math.random() * this.state.numbers.length), 1);\n\t\tvar pop_value = arr_pop[0];\n\t\t\n\t\t\n\t\tthis.setState( state => {\n\t\t\tconst active_numbers = this.state.active_numbers;\n\t\t\tconst numbers = this.state.numbers;\n\t\t\tconst current_number = pop_value;\n\t\t\tactive_numbers[pop_value] = 0;\n\t\t\treturn {\n\t\t\t\tnumbers,\n\t\t\t\tactive_numbers,\n\t\t\t\tcurrent_number\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t});\n\t\t\t\t\t\t\t\t\t\n\t}\n\tgetSnapshotBeforeUpdate(prevProps, prevState) {\n\t\t// Are we adding new items to the list?\n\t\t// Capture the scroll position so we can adjust scroll later.\n\t\t\n\t\tif (prevState.current_number !== this.state.current_number) {\n\t\t\tthis.callSpeech();\t\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// Typical usage (don't forget to compare props):\n\t\t// if (this.props.userID !== prevProps.userID) {\n\t\t// \tthis.fetchData(this.props.userID);\n\t\t// }\n\t\t\n\t}\n\tcallSpeech() {\n\t\tspeech\n\t\t.speak({\n\t\t\ttext: 'Number, ' + this.state.current_number + '.I repeat, Number, ' + this.state.current_number,\n\t\t\tqueue: true,\n\t\t\tlisteners: {\n\t\t\t\tonstart: () => {\n\t\t\t\t\t//console.log(\"Start utterance\");\n\t\t\t\t},\n\t\t\t\tonend: () => {\n\t\t\t\t\t//console.log(\"End utterance\");\n\t\t\t\t},\n\t\t\t\tonresume: () => {\n\t\t\t\t\t//console.log(\"Resume utterance\");\n\t\t\t\t},\n\t\t\t\tonboundary: event => {\n\t\t\t\t\t// console.log(\n\t\t\t\t\t// \tevent.name +\n\t\t\t\t\t// \t\" boundary reached after \" +\n\t\t\t\t\t// \tevent.elapsedTime +\n\t\t\t\t\t// \t\" milliseconds.\"\n\t\t\t\t\t// );\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.then(data => {\n\t\t\t//console.log(\"Success !\", data);\n\t\t\t\n\t\t})\n\t\t.catch(e => {\n\t\t\tconsole.error(\"An error occurred :\", e);\n\t\t});\n\t}\n\n\ttickTimer(){\n\t\tthis.setState({\n\t\t\ttime: this.state.time + 1\n\t\t});\n\t}\n\tstartTimer() {\n\t\t// this.timer = setInterval(() => this.setState({\n\t\t// \ttime: this.state.time + 1\t\t\t\n\t\t// }), 1000)\n\t\t\n\t\t//console.log(\"start\" + this.state.time\n\t\tif (this.state.numbers.length>0) {\n\t\t\t\n\t\t\tif (this.state.start_button_text === 'Start') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tstart_button_text: 'Pause'\n\t\t\t\t});\n\t\t\t\tconsole.log(\"stop\")\n\t\t\t}\n\t\t\tthis.timer = setInterval(() => {\n\t\t\t\tthis.tickTimer();\n\n\t\t\t\tif (this.state.time > 9) {\n\t\t\t\t\tthis.resetTimer();\n\t\t\t\t\tthis.stopTimer();\n\t\t\t\t\tthis.timer2 = setTimeout(function() {\n\t\t\t\t\t\t\tthis.startTimer();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t.bind(this),\n\t\t\t\t\t\t2000\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t}, 1000)\n\t\t}\n\t\telse{\n\t\t\tCookies.remove('numbers');\n\t\t\tCookies.remove('active_numbers');\n\t\t}\n\t\t\t\t\n\t}\n\tstopTimer() {\n\t\tclearInterval(this.timer)\n\t\tclearTimeout(this.timer2)\n\t\tthis.setState({ time: 0 })\n\t\tif(this.state.start_button_text==='Pause') {\n\t\t\tthis.setState({\n\t\t\t\tstart_button_text: 'Start'\n\t\t\t});\n\t\t\tconsole.log(\"stop\")\n\t\t}\n\t\t\n\t}\n\tresetTimer() {\n\t\tthis.setState({ time: 0 })\n\t\tconsole.log(\"reset\")\n\t\t\n\t\tthis.popValue();\n\t\t\n\t}\n\trestartGame() {\n\t\tCookies.remove('numbers');\n\t\tCookies.remove('active_numbers');\n\t\twindow.location.reload();\n\t\t\n\t}\n\t\n\trender() {\t\t\t\t\n\t\tCookies.set(\n\t\t\t'numbers',\n\t\t\tthis.state.numbers\n\t\t)\n\t\tCookies.set(\n\t\t\t'active_numbers',\n\t\t\tthis.state.active_numbers\n\t\t)\n\t\tif ( this.state.numbers.length === 0 ) {\n\t\t\tCookies.remove('numbers');\n\t\t\tCookies.remove('active_numbers');\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t{this.createTable()}\t\t\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div className=\"timer_buttons\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<span className=\"btn startButton\" onClick={this.startButtonClick}>{this.state.start_button_text}</span>\n\t\t\t\t\t\t<span className=\"btn stopButton\" onClick={this.stopButtonClick}>Stop</span>\n\t\t\t\t\t\t<span className=\"btn startButton\" onClick={this.restartGame}>Restart</span>\n\t\t\t\t\t\t<span className=\"timer\">Timer: {this.state.time}</span>\n\t\t\t\t\t\t<img alt='Please Wait...' className={this.state.time > 0 ? '' : 'hide'} src=\"https://loading.io/spinners/microsoft/lg.rotating-balls-spinner.gif\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div><div className=\"\" id='pop' onClick={this.handleClick} >POP</div></div>\n\t\t\t\t\t<div id='game-speech-number' className=\"hide\">{this.state.current_number !== '' ? 'Number, ' + this.state.current_number + '.I repeat, Number, ' + this.state.current_number:''}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-current-number\">\t\t\t\t\t\n\t\t\t\t\t<div className={this.state.current_number !== '' ? '':'hide'}>{this.state.current_number}</div>\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n\n}\n\n// class Housie extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tsquares: Array(90).fill(null),\n// \t\t};\n// \t}\n\n// \trender() {\n\t\t\n// \t\tlet status;\n// \t\treturn (\n// \t\t\t<div className=\"game\">\n// \t\t\t\t<div className=\"game-board\">\n// \t\t\t\t\t{this.createTable()}\n// \t\t\t\t\t<button id='pop' onClick={this.handleClick} >POP</button>\n// \t\t\t\t\t<div>{this.state.current_number}</div>\n// \t\t\t\t</div>\n\n// \t\t\t\t<div className=\"game-info\">\n// \t\t\t\t\t<div>{MyTable.status.current_number}</div>\n// \t\t\t\t\t<ol>{/* TODO */}</ol>\n// \t\t\t\t</div>\n\t\t\t\t\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\n\n\n\nexport default Housie;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Housie from './Housie';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Housie />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}